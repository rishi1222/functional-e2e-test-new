node {
    options {
        timestamps()
        buildDiscarder(logRotator(numToKeepStr: '30', artifactNumToKeepStr: '30'))
        timeout(time: 5, unit: 'HOURS')
        ansiColor('xterm')
    }
    stage ('build') {
        git url:'https://github.com/rishi1222/functional-e2e-test-new.git'
        // conduct other build tasks
    }

    stage ('end-to-end tests') {
        timeout(time: 60, unit: 'SECONDS') {
            try {
                sh 'docker-compose up -d'
                waitUntil { // application is up
                    def r = sh (script: 'curl -s http://10.169.147.22:8010/health| grep "UP"', returnStatus: true)
                    echo "Build flag:${r}"
                    sh 'docker-compose ps'
                    return (r == 0);
                }

                // conduct main test here
                sh (script:'curl -s http://10.169.147.22:8010 | grep "Docker Java"')
                sh 'mvn clean test'

            } finally {
                sh (script:'echo "Test Complete"')
            }
        }
    }

    stage('end test'){
        sh 'docker-compose down'
    }

    stage ('deploy') {
        // deploy the containers/application here
    }
}
